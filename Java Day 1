class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    
    TreeNode(int x) {
        val = x;
    }
}

public class LeafSimilarTrees {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        StringBuilder leaves1 = new StringBuilder();
        StringBuilder leaves2 = new StringBuilder();
        
        findLeaves(root1, leaves1);
        findLeaves(root2, leaves2);
        
        return leaves1.toString().equals(leaves2.toString());
    }
    
    private void findLeaves(TreeNode node, StringBuilder leaves) {
        if (node == null)
            return;
        
        if (node.left == null && node.right == null)
            leaves.append(node.val).append(",");
        
        findLeaves(node.left, leaves);
        findLeaves(node.right, leaves);
    }
    
    public static void main(String[] args) {
        LeafSimilarTrees leafSimilarTrees = new LeafSimilarTrees();
        
        // Example usage:
        TreeNode root1 = new TreeNode(3);
        root1.left = new TreeNode(5);
        root1.right = new TreeNode(1);
        root1.left.left = new TreeNode(6);
        root1.left.right = new TreeNode(2);
        root1.right.left = new TreeNode(9);
        root1.right.right = new TreeNode(8);
        root1.left.right.left = new TreeNode(7);
        root1.left.right.right = new TreeNode(4);
        
        TreeNode root2 = new TreeNode(3);
        root2.left = new TreeNode(5);
        root2.right = new TreeNode(1);
        root2.left.left = new TreeNode(6);
        root2.left.right = new TreeNode(2);
        root2.right.left = new TreeNode(9);
        root2.right.right = new TreeNode(8);
        root2.left.right.left = new TreeNode(7);
        root2.left.right.right = new TreeNode(4);
        
        boolean areSimilar = leafSimilarTrees.leafSimilar(root1, root2);
        System.out.println("Are the trees leaf-similar? " + areSimilar);
    }
}
